apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: myapp-ui
  name:  myapp-ui
  namespace: myapp
spec:
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: myapp-ui
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: myapp-ui
    spec:
      # topologySpreadConstarints:
      # - maxSkew: 1
      #   topologyKey: kubernetes.io/hostname
      #   whenUnsatisfiable: DoNotSchedule
      #   labelSelector: 
      #     matchLabels:
      #       app.kubernetes.io/name: myapp-ui
      matchLableKeys:
      - pod-template-hash
      containers:
      - image: krishnamaram2/myapp-ui:4fe4da70a1ff7d0fb573afd176ae557aebb56688
        name: myapp-ui
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        
            

####### The below is example for NodePort #####
---
apiVersion: v1
kind: Service
metadata:
   name: myapp-ui-svc
   namespace: myapp
spec:
  type: NodePort
  selector:
     app.kubernetes.io/name: myapp-ui
  ports:
  -  port: 80
     targetPort: 80
     nodePort: 30001       






# ---
# apiVersion: v1
# kind: Service
# metadata:
#    name: myapp-ui-svc
#    namespace: myapp
# spec:
#   type: ClusterIP
#   selector:
#      app.kubernetes.io/name: myapp-ui
#   ports:
#   -  port: 80
#      targetPort: 8080



